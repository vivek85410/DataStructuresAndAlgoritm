code link - https://www.codechef.com/practice/course/tcs-nqt-questions/TCSNQTC/problems/TCSNQTCP08


#include <bits/stdc++.h>
using namespace std;

vector<int> findUnion(int n, int m, vector<int>& arr1, vector<int>& arr2) {
    vector<int> result(m+n);
    for(int i=0;i<n;i++){
        result.push_back(arr1[i]);
    }
    for(int i=0;i<m;i++){
        result.push_back(arr2[i]);
    }
    unordered_set<int> st (result.begin(),result.end());
    return vector<int> (st.begin(),st.end());
}

int main() {
    int t;
    cin >> t;

    while (t--) {
        int n, m;
        cin >> n >> m;
        vector<int> arr1(n), arr2(m);

        for (int i = 0; i < n; i++) {
            cin >> arr1[i];
        }

        for (int i = 0; i < m; i++) {
            cin >> arr2[i];
        }

        vector<int> result = findUnion(n, m, arr1, arr2);
        sort(result.begin(),result.end());
        
        for(int i=0;i<result.size();i++){
            if(result[i]==0){
                continue;
            }else{
                cout<<result[i]<<" ";
            }
        }
        cout << endl;
        
    }

    return 0;
}
