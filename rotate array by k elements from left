code link - https://takeuforward.org/data-structure/rotate-array-by-k-elements-block-swap-algorithm/


#include<iostream>
#include<vector>
#include<algorithm>
using namespace std;

void solve(vector<int>&arr,int k){
    // reversing first k part
    reverse(arr.begin(),arr.begin()+k);

    // reversing remaining parts left
    reverse(arr.begin()+k,arr.end());

    //reversing all the array

    reverse(arr.begin(),arr.end());
}

int main(){

    vector<int> arr = {1,2,3,4,5,6,7};
    int k = 3;
    solve(arr,k);
    for(int i=0;i<arr.size();i++){
        cout<<arr[i]<<endl;
    }
return 0;
}




## another pattern ------------------------------------------------

code link - https://www.geeksforgeeks.org/problems/rotate-array-by-n-elements-1587115621/1


class Solution {
  public:

    // Function to rotate an array by d elements in counter-clockwise direction.
    void rotateArr(vector<int>& arr, int d) {
        int n = arr.size();
        d = d%n;
        reverse(arr.begin(),arr.begin()+d);
        reverse(arr.begin()+d,arr.end());
        reverse(arr.begin(),arr.end());
    }
};




