code link -  https://www.naukri.com/code360/problems/sort-a-stack_985275?topList=love-babbar-dsa-sheet-problems&leftPanelTab=0%3Fsource%3Dyoutube&campaign=Lovebabbarcodestudio&utm_source=youtube&utm_medium=affiliate&utm_campaign=Lovebabbarcodestudio&leftPanelTabValue=SUBMISSION


#include <bits/stdc++.h>

void sortedInsert(stack<int> &stack, int x){
	// base case
	if(stack.empty() || stack.top() < x){
		stack.push(x);
		return;
	}

	int ans = stack.top();
	stack.pop();

	//recursive call
	sortedInsert(stack,x);

	stack.push(ans);
}

void sortStack(stack<int> &stack)
{
	// base case
	if(stack.empty()){
		return;
	}

	int num = stack.top();
	stack.pop();

	//recursive call 
	sortStack(stack);

	sortedInsert(stack,num);
}

Another approach ---------------

#include <bits/stdc++.h>
using namespace std;

void sortStack(stack<int> &s){
	// first init a vector array to keep the top element
	vector<int>ans;

	// start a loop to push all the elements to vector
	while(!s.empty()){
		ans.push_back(s.top());
		s.pop();
	}

	// now sort the array in ascending order
	sort(ans.rbegin(),ans.rend());

	// now start a loop to push all the vector array elements to stack
	for(auto i : ans){
		s.push(i);
	}
}
